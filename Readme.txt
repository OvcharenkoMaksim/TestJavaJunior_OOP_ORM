 Проект создан дл¤ прохождени¤ собеседовани¤ на Java Junior
 Проект автоматизирует работу по формированию моего основного запроса к БД одной из трех тестовых площадок проекта ПУР КС - Test, Demo, Rls.
 Запрос использует данные из Routecontext, Org, Doc, Doctype, Docstate объединяя их JOINом по ключам.

 Описание работы приложения:
 1. Общее - приложение позволяет выбрать прараметр отюора записей в БД, принимает данные, валидирует их, предлагает выбрать вариант формирования ответа от БД (кол-во полей в ответе), подключается к БД, отправляет сформированный запрос в БД и отформатированный ответ выводит в консоль.

 2. Детали: 
а) предлагается выбор БД УФОСа тестовой площадки, к которой будет выполнено подключение (TSE-TEST, TSE-DEMO, TSE-RLS).
б) выбирается параметр отбора записей в БД - GLOBALDOCID или ROUTECONTEXTID.
в) принимаются значения параметра отбора записей, выполняется их валидация, удаление дублей, если они имеют место.
г) определяется состав полей, возвращаемых запросом.
д) формируется итоговый запрос к БД.
д) выполняется подключение к БД, выполняется запрос и ответ в отформатированном виде выводится в консоль.

 Применяемые технологии и решения - абстракция и наследование, ввод-вывод, циклы, ветвления, работа с датами, работа с коллекциями (List, Set, Map), jdbc, Spring Core, реализованы элементы ORM, проект создан на основе Maven.

 Состав классов в порядке их иерархии и цели каждого из классов:
 Start - стартовый класс приложения с методом main.

   RequestSubmission - вывести из созданной карты необходимые поля в нужной последовательности в консоль, для отображения пользоватею.
   
       FieldsView - определение пользователем вида выводимого результата, в частности количество полей в ответе от БД, выбрав один из двух предложенных вариантов
       Connect - реализация запрос к БД и получение в итоге карты объектов с данными полей запроса. Из данной карты формируется выводимый пользователю ответ на запрос.
	   
	        ConnectStendFath - сервисный родительский класс, выполнить подключение к БД по подданым в метод аргументам, полученный запрос сохраняет в Map и возвращает ее.
	             ConnectTest - наследник ConnectStendFath, подает реальные данные, необходимые для подключения к БД TSE-TEST, выступает как прокси.
	             ConnectDemo - наследник ConnectStendFath, подает реальные данные, необходимые для подключения к БД TSE-DEMO, выступает как прокси.
	             ConnectRls - наследник ConnectStendFath, подает реальные данные, необходимые для подключения к БД TSE-RLS, выступает как прокси.
				 
		               ConnectStend.properties - инверсирует управление данными для подключения в классах наследниках, для корректировки их в отдельном документе, а не в самом коде, в случае изменения данных для подключения (пароль, изменения в url, логин). Не является классом, является частью реализации Spring. 
					   
	         RequestStructure - создает итоговый запрос к БД.
			 
				Introducer - помогает пользователю выбрать параметр для отбора записей БД, получеат значения данного параметра, выполняет проверку на корректность вводимых данных м удаляет дубли.
				
					ValidatorArgumentFath - сервисный родительский класс, получает значения параметра отбора записей в БД УФОС, выполняет их валидацию, удаляет возможные дубли.
					
					    ValidatorArgumentGuid - сервисный класс-наследник ValidatorArgumentFath, принимает guid в качестве параметра запроса, выполняет валидацию вводимых значений и удаляет возможные дубли.
					    ValidatorArgumentIdDB - сервисный класс-наследник ValidatorArgumentFath, принимает Идентификаторы БД в качестве параметра запроса, выполняет валидацию вводимых значений и удаляет возможные дубли.
						
			Responseline - создает объект, в котором будет храниться строка возвращенного от БД ответа на запрос. Реализует ORM - связывает поля объекта с полями результирующего запроса от реляционной БД.
			
applicationContext.xml - часть Spring, реализует внедрение зависимостей между объектами и инжектирует данные в поля объектов (для подключения к БД). Позволяет легко изменять данные подключения к БД через конфигурационный файл ConnectStend.properties.

 Проект отличается от первоначальной версии проекта, разрабатываемой для собеседлования (https://github.com/OvcharenkoMaksim/TestJavaJunior), т.к. реализует концепции ООП, ORM, Spring.